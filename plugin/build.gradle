/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 *
 */

plugins {
    id 'java'
    id 'nebula.ospackage'
    id "io.freefair.lombok"
    id 'jacoco'
    id "com.diffplug.gradle.spotless" version "3.26.1"
    id 'checkstyle'
}
apply plugin: 'opensearch.opensearchplugin'
apply plugin: 'opensearch.testclusters'
ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.txt')
    noticeFile = rootProject.file('NOTICE')
}


opensearchplugin {
    name 'opensearch-ml'
    description 'machine learning plugin for opensearch'
    classname 'org.opensearch.ml.plugin.MachineLearningPlugin'
}

dependencies {
    compile project(':opensearch-ml-common')
    compile project(':opensearch-ml-algorithms')

    compile group: 'org.opensearch', name: 'opensearch', version: "${opensearch_version}"
    compile("com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}")
    compile("com.fasterxml.jackson.core:jackson-databind:${versions.jackson}")
    compile group: 'com.google.guava', name: 'guava', version:'29.0-jre'

    checkstyle "com.puppycrawl.tools:checkstyle:${project.checkstyle.toolVersion}"
}

test {
    include '**/*Test.class'
    systemProperty 'tests.security.manager', 'false'
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled true
    }
}

compileJava {
    options.compilerArgs.addAll(["-processor", 'lombok.launch.AnnotationProcessorHider$AnnotationProcessor'])
}

/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 *
 */

//TODO: check which one should be enabled
licenseHeaders.enabled = false
testingConventions.enabled = false
checkstyleTest.enabled = false
forbiddenApis.ignoreFailures = false
dependencyLicenses.enabled = false
thirdPartyAudit.enabled = false
forbiddenApisTest.ignoreFailures = true
forbiddenApisMain.ignoreFailures = true
validateNebulaPom.enabled = false
checkstyleMain.enabled = false
loggerUsageCheck.enabled = false

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }

    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                minimum = 0.1
            }
            limit {
                counter = 'BRANCH'
                minimum = 0.1
            }
        }
    }
    dependsOn jacocoTestReport
}
check.dependsOn jacocoTestCoverageVerification

configurations.all {
    resolutionStrategy.force 'junit:junit:4.12'
    resolutionStrategy.force 'org.apache.commons:commons-lang3:3.10'
    resolutionStrategy.force 'commons-logging:commons-logging:1.2'
}

spotless {
    java {
        removeUnusedImports()
        importOrder 'java', 'javax', 'org', 'com'

        eclipse().configFile rootProject.file('.eclipseformat.xml')
    }
}

checkstyle {
    toolVersion = '8.29'
}